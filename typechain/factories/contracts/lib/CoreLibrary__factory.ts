/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { CoreLibrary, CoreLibraryInterface } from "../../../contracts/lib/CoreLibrary";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "payOutAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "assetValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "insured",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "threshold",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "utilized",
            type: "bool",
          },
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
        ],
        internalType: "struct CoreLibrary.Policy",
        name: "policy",
        type: "tuple",
      },
    ],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61030461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063632d49f21461003a575b600080fd5b61004d6100483660046101f7565b610061565b604051901515815260200160405180910390f35b60a081015160009073ffffffffffffffffffffffffffffffffffffffff16156100a15742826080015111156100a1578160e001516100a157506001919050565b506000919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156100fc576100fc6100a9565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461012657600080fd5b919050565b803560ff8116811461012657600080fd5b8035801515811461012657600080fd5b600082601f83011261015d57600080fd5b813567ffffffffffffffff80821115610178576101786100a9565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156101be576101be6100a9565b816040528381528660208588010111156101d757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561020957600080fd5b813567ffffffffffffffff8082111561022157600080fd5b90830190610120828603121561023657600080fd5b61023e6100d8565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015261027660a08401610102565b60a082015261028760c0840161012b565b60c082015261029860e0840161013c565b60e082015261010080840135838111156102b157600080fd5b6102bd8882870161014c565b91830191909152509594505050505056fea2646970667358221220d45cdd33cd58e6ca62e8003f8e42b77633578057c481d65e0c134711be9b1b0264736f6c63430008090033";

type CoreLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoreLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoreLibrary__factory extends ContractFactory {
  constructor(...args: CoreLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<CoreLibrary> {
    return super.deploy(overrides || {}) as Promise<CoreLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoreLibrary {
    return super.attach(address) as CoreLibrary;
  }
  override connect(signer: Signer): CoreLibrary__factory {
    return super.connect(signer) as CoreLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreLibraryInterface {
    return new utils.Interface(_abi) as CoreLibraryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CoreLibrary {
    return new Contract(address, _abi, signerOrProvider) as CoreLibrary;
  }
}
