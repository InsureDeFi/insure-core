/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AddressesProvider,
  AddressesProviderInterface,
} from "../../../contracts/configuration/AddressesProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "AddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "FeeDistributorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "ParametersProviderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "PremiumEngineUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "PriceOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "RiskPoolCoreUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "RiskPoolManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "RiskPoolUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParametersProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPremiumEngine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskPoolCore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskPoolManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeDistributor",
        type: "address",
      },
    ],
    name: "setFeeDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newParametersProvider",
        type: "address",
      },
    ],
    name: "setParametersProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPremiumEngine",
        type: "address",
      },
    ],
    name: "setPremiumEngine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPriceOracle",
        type: "address",
      },
    ],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRiskPool",
        type: "address",
      },
    ],
    name: "setRiskPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRiskPoolCore",
        type: "address",
      },
    ],
    name: "setRiskPoolCore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRiskPoolManager",
        type: "address",
      },
    ],
    name: "setRiskPoolManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114138061007e6000396000f3fe60806040526004361061018b5760003560e01c80638da5cb5b116100d6578063ca446dd91161007f578063f3b7dead11610059578063f3b7dead1461060c578063f4c5a81e1461062c578063fca513a81461069f57600080fd5b8063ca446dd9146105ac578063ccfc2e8d146105cc578063f2fde38b146105ec57600080fd5b80639d6c5818116100b05780639d6c5818146104a65780639e7663b314610519578063c89131731461053957600080fd5b80638da5cb5b146104485780639623609d1461047357806399a88ec41461048657600080fd5b8063530e784f116101385780637eff275e116101125780637eff275e146103e8578063883e60aa146104085780638bc9bfbd1461042857600080fd5b8063530e784f1461034057806363d1a28b14610360578063715018a6146103d357600080fd5b806320644b081161016957806320644b081461026a57806321f8a721146102dd5780634c93943c1461032057600080fd5b8063073bf33d146101905780630852b8a814610228578063204e1c7a1461024a575b600080fd5b34801561019c57600080fd5b507f5249534b5f504f4f4c000000000000000000000000000000000000000000000060005260016020527fd0c6bc474b6b8791799fc49338b6e4c15e60e6ee7480522dd1c5834ed72d7d125473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561023457600080fd5b50610248610243366004611171565b610712565b005b34801561025657600080fd5b506101ff610265366004611171565b6107d8565b34801561027657600080fd5b507f504152414d45544552535f50524f56494445520000000000000000000000000060005260016020527fcdcf3d45848e3bcf9a6b1c8c3ca4f131ea46efd579f7f1726dfb26f7221f58965473ffffffffffffffffffffffffffffffffffffffff166101ff565b3480156102e957600080fd5b506101ff6102f8366004611195565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b34801561032c57600080fd5b5061024861033b366004611171565b61088f565b34801561034c57600080fd5b5061024861035b366004611171565b610955565b34801561036c57600080fd5b507f5052454d49554d5f454e47494e4500000000000000000000000000000000000060005260016020527f782d809ff9c6027aaba2f9ee3397431413afec7f75d5b47f54b00e974108cfad5473ffffffffffffffffffffffffffffffffffffffff166101ff565b3480156103df57600080fd5b50610248610a1b565b3480156103f457600080fd5b506102486104033660046111ae565b610a2f565b34801561041457600080fd5b50610248610423366004611171565b610abd565b34801561043457600080fd5b50610248610443366004611171565b610b83565b34801561045457600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166101ff565b610248610481366004611216565b610c49565b34801561049257600080fd5b506102486104a13660046111ae565b610cde565b3480156104b257600080fd5b507f5249534b5f504f4f4c5f434f524500000000000000000000000000000000000060005260016020527f353be993b0d33c52abff8bf7c5cae39e4f8325c87491fba6152bcd6a249268835473ffffffffffffffffffffffffffffffffffffffff166101ff565b34801561052557600080fd5b50610248610534366004611171565b610d3a565b34801561054557600080fd5b507f4645455f4449535452494255544f52000000000000000000000000000000000060005260016020527f834fe9cc7ff313c120b0afaa3b0ac1ee25afb7d0859f76975a292667c091bfcf5473ffffffffffffffffffffffffffffffffffffffff166101ff565b3480156105b857600080fd5b506102486105c736600461130a565b610e00565b3480156105d857600080fd5b506102486105e7366004611171565b610e8b565b3480156105f857600080fd5b50610248610607366004611171565b610f51565b34801561061857600080fd5b506101ff610627366004611171565b61100d565b34801561063857600080fd5b507f5249534b5f504f4f4c5f4d414e4147455200000000000000000000000000000060005260016020527f71a69e64b9adc53fa33ff8a9ffef3e70fde4fc53568b237fbeba1a9436d238d65473ffffffffffffffffffffffffffffffffffffffff166101ff565b3480156106ab57600080fd5b507f50524943455f4f5241434c45000000000000000000000000000000000000000060005260016020527f09c42ce2b8743b2d739b046fe6af227cd392ebe6dc7ade0f7795bfe8b5e8d5245473ffffffffffffffffffffffffffffffffffffffff166101ff565b61071a611059565b7f5052454d49554d5f454e47494e45000000000000000000000000000000000000600090815260016020527f782d809ff9c6027aaba2f9ee3397431413afec7f75d5b47f54b00e974108cfad805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917f6518670c7767f999d7b44a64c50e2fdef37479d0ca049884408f30c4d048fb279190a35050565b60008060008373ffffffffffffffffffffffffffffffffffffffff16604051610824907f5c60da1b00000000000000000000000000000000000000000000000000000000815260040190565b600060405180830381855afa9150503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b50915091508161087357600080fd5b80806020019051810190610887919061132f565b949350505050565b610897611059565b7f5249534b5f504f4f4c0000000000000000000000000000000000000000000000600090815260016020527fd0c6bc474b6b8791799fc49338b6e4c15e60e6ee7480522dd1c5834ed72d7d12805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917f1c240a667ec96b0c07ccf67ac82228077a36f34f0fd515337490fa22eaa6959c9190a35050565b61095d611059565b7f50524943455f4f5241434c450000000000000000000000000000000000000000600090815260016020527f09c42ce2b8743b2d739b046fe6af227cd392ebe6dc7ade0f7795bfe8b5e8d524805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917f56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd9190a35050565b610a23611059565b610a2d60006110da565b565b610a37611059565b6040517f8f28397000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152831690638f283970906024015b600060405180830381600087803b158015610aa157600080fd5b505af1158015610ab5573d6000803e3d6000fd5b505050505050565b610ac5611059565b7f5249534b5f504f4f4c5f4d414e41474552000000000000000000000000000000600090815260016020527f71a69e64b9adc53fa33ff8a9ffef3e70fde4fc53568b237fbeba1a9436d238d6805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917fc0151bf54ed8ef257196a9f1704ae2310cf853854f4b5dad9d35e7877b7162ca9190a35050565b610b8b611059565b7f504152414d45544552535f50524f564944455200000000000000000000000000600090815260016020527fcdcf3d45848e3bcf9a6b1c8c3ca4f131ea46efd579f7f1726dfb26f7221f5896805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917fd84ba3181909e33f133c295b07e51db37083e049c1f5abc3e140aff41a7cd73c9190a35050565b610c51611059565b6040517f4f1ef28600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690634f1ef286903490610ca7908690869060040161134c565b6000604051808303818588803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b5050505050505050565b610ce6611059565b6040517f3659cfe600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152831690633659cfe690602401610a87565b610d42611059565b7f5249534b5f504f4f4c5f434f5245000000000000000000000000000000000000600090815260016020527f353be993b0d33c52abff8bf7c5cae39e4f8325c87491fba6152bcd6a24926883805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917f1c240a667ec96b0c07ccf67ac82228077a36f34f0fd515337490fa22eaa6959c9190a35050565b610e08611059565b60008281526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff8681169182179093559251911692839186917f9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b791a4505050565b610e93611059565b7f4645455f4449535452494255544f520000000000000000000000000000000000600090815260016020527f834fe9cc7ff313c120b0afaa3b0ac1ee25afb7d0859f76975a292667c091bfcf805473ffffffffffffffffffffffffffffffffffffffff8481167fffffffffffffffffffffffff00000000000000000000000000000000000000008316811790935560405191169283917fbb470d12faa974cbae56bc3c345446451b4d504aa13806836f3df6d032fa9a919190a35050565b610f59611059565b73ffffffffffffffffffffffffffffffffffffffff8116611001576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61100a816110da565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff16604051610824907ff851a44000000000000000000000000000000000000000000000000000000000815260040190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ff8565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461100a57600080fd5b60006020828403121561118357600080fd5b813561118e8161114f565b9392505050565b6000602082840312156111a757600080fd5b5035919050565b600080604083850312156111c157600080fd5b82356111cc8161114f565b915060208301356111dc8161114f565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561122b57600080fd5b83356112368161114f565b925060208401356112468161114f565b9150604084013567ffffffffffffffff8082111561126357600080fd5b818601915086601f83011261127757600080fd5b813581811115611289576112896111e7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156112cf576112cf6111e7565b816040528281528960208487010111156112e857600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561131d57600080fd5b8235915060208301356111dc8161114f565b60006020828403121561134157600080fd5b815161118e8161114f565b73ffffffffffffffffffffffffffffffffffffffff8316815260006020604081840152835180604085015260005b818110156113965785810183015185820160600152820161137a565b818111156113a8576000606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160600194935050505056fea2646970667358221220bd2544e396a8175fa8ae40e126a7f1f643a188f25f136b02eaaa5d3517a4da3d64736f6c63430008090033";

type AddressesProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressesProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressesProvider__factory extends ContractFactory {
  constructor(...args: AddressesProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressesProvider> {
    return super.deploy(overrides || {}) as Promise<AddressesProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressesProvider {
    return super.attach(address) as AddressesProvider;
  }
  override connect(signer: Signer): AddressesProvider__factory {
    return super.connect(signer) as AddressesProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressesProviderInterface {
    return new utils.Interface(_abi) as AddressesProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressesProvider {
    return new Contract(address, _abi, signerOrProvider) as AddressesProvider;
  }
}
