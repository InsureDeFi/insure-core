/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRiskPool,
  IRiskPoolInterface,
} from "../../../contracts/interfaces/IRiskPool";

const _abi = [
  {
    inputs: [],
    name: "RiskPool__AssetNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minRequired",
        type: "uint256",
      },
    ],
    name: "RiskPool__CoverLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAllowed",
        type: "uint256",
      },
    ],
    name: "RiskPool__DurationTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minRequired",
        type: "uint256",
      },
    ],
    name: "RiskPool__DurationTooShort",
    type: "error",
  },
  {
    inputs: [],
    name: "RiskPool__Freezed",
    type: "error",
  },
  {
    inputs: [],
    name: "RiskPool__InActive",
    type: "error",
  },
  {
    inputs: [],
    name: "RiskPool__InsuredAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RiskPool__PolicyNotActive",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "insured",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "policyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentAssetPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payOutAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "threshold",
        type: "uint8",
      },
    ],
    name: "Insured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "policyId",
        type: "uint256",
      },
    ],
    name: "PolicyPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetsUnlocked",
        type: "uint256",
      },
    ],
    name: "Unlocked",
    type: "event",
  },
];

export class IRiskPool__factory {
  static readonly abi = _abi;
  static createInterface(): IRiskPoolInterface {
    return new utils.Interface(_abi) as IRiskPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRiskPool {
    return new Contract(address, _abi, signerOrProvider) as IRiskPool;
  }
}
