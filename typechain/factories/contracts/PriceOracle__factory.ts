/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PriceOracle, PriceOracleInterface } from "../../contracts/PriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_ORACLE_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "assets",
        type: "string[]",
      },
    ],
    name: "getMultiPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IStdReference",
        name: "_ref",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ref",
    outputs: [
      {
        internalType: "contract IStdReference",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610c5d806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806353db89131161005057806353db8913146100f0578063c4d66de814610110578063e19f47001461012557600080fd5b80631b4b72f81461007757806321a78f6814610092578063524f3889146100dd575b600080fd5b61007f600181565b6040519081526020015b60405180910390f35b6000546100b89062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b61007f6100eb366004610671565b61016e565b6101036100fe3660046106e3565b610259565b6040516100899190610746565b61012361011e36600461078a565b61049d565b005b6101616040518060400160405280600381526020017f555344000000000000000000000000000000000000000000000000000000000081525081565b6040516100899190610832565b60008054604080518082018252600381527f5553440000000000000000000000000000000000000000000000000000000000602082015290517f65555bcc000000000000000000000000000000000000000000000000000000008152839262010000900473ffffffffffffffffffffffffffffffffffffffff16916365555bcc9161020091889188919060040161088e565b60606040518083038186803b15801561021857600080fd5b505afa15801561022c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102509190610998565b51949350505050565b606060008267ffffffffffffffff811115610276576102766108be565b6040519080825280602002602001820160405280156102a957816020015b60608152602001906001900390816102945790505b50905060005b815181101561031e576040518060400160405280600381526020017f5553440000000000000000000000000000000000000000000000000000000000815250828281518110610300576103006109b4565b60200260200101819052508080610316906109e3565b9150506102af565b50600080546040517fe42a071b0000000000000000000000000000000000000000000000000000000081526201000090910473ffffffffffffffffffffffffffffffffffffffff169063e42a071b9061037f90889088908790600401610a98565b60006040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103f19190810190610b77565b905060008467ffffffffffffffff81111561040e5761040e6108be565b604051908082528060200260200182016040528015610437578160200160208202803683370190505b50905060005b815181101561049357828181518110610458576104586109b4565b602002602001015160000151828281518110610476576104766109b4565b60209081029190910101528061048b816109e3565b91505061043d565b5095945050505050565b600054610100900460ff16158080156104bd5750600054600160ff909116105b806104d75750303b1580156104d7575060005460ff166001145b610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156105c557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff851602179055801561066d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6000806020838503121561068457600080fd5b823567ffffffffffffffff8082111561069c57600080fd5b818501915085601f8301126106b057600080fd5b8135818111156106bf57600080fd5b8660208285010111156106d157600080fd5b60209290920196919550909350505050565b600080602083850312156106f657600080fd5b823567ffffffffffffffff8082111561070e57600080fd5b818501915085601f83011261072257600080fd5b81358181111561073157600080fd5b8660208260051b85010111156106d157600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561077e57835183529284019291840191600101610762565b50909695505050505050565b60006020828403121561079c57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107c057600080fd5b9392505050565b6000815180845260005b818110156107ed576020818501810151868301820152016107d1565b818111156107ff576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107c060208301846107c7565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006108a2604083018587610845565b82810360208401526108b481856107c7565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610934576109346108be565b604052919050565b60006060828403121561094e57600080fd5b6040516060810181811067ffffffffffffffff82111715610971576109716108be565b80604052508091508251815260208301516020820152604083015160408201525092915050565b6000606082840312156109aa57600080fd5b6107c0838361093c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600081518084526020808501808196508360051b8101915082860160005b85811015610a8b578284038952610a798483516107c7565b98850198935090840190600101610a61565b5091979650505050505050565b6040808252810183905260006060600585901b8301810190830186835b87811015610b62577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa086850301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18a3603018112610b1657600080fd5b89018035602067ffffffffffffffff821115610b3157600080fd5b8136038c1315610b4057600080fd5b610b4d8783838601610845565b96509485019493909301925050600101610ab5565b50505082810360208401526108b48185610a43565b60006020808385031215610b8a57600080fd5b825167ffffffffffffffff80821115610ba257600080fd5b818501915085601f830112610bb657600080fd5b815181811115610bc857610bc86108be565b610bd6848260051b016108ed565b81815284810192506060918202840185019188831115610bf557600080fd5b938501935b82851015610c1b57610c0c898661093c565b84529384019392850192610bfa565b5097965050505050505056fea264697066735822122005d98813513a4e025873c9cd08bcad7db0ddd82c5dd65e200b07bd4ed8a0bada64736f6c63430008090033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PriceOracle> {
    return super.deploy(overrides || {}) as Promise<PriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  override connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
