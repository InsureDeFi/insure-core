/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PremiumEngine,
  PremiumEngineInterface,
} from "../../contracts/PremiumEngine";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientCapacity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXCESS_UTILIZATION_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPTIMAL_UTILIZATION_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATE_SLOPE_1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATE_SLOPE_2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedAmount",
        type: "uint256",
      },
    ],
    name: "getPremium",
    outputs: [
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedAmount",
        type: "uint256",
      },
    ],
    name: "getPremiumRate",
    outputs: [
      {
        internalType: "uint256",
        name: "premiumRate",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AccessController",
        name: "accessController_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161157e61011960003960008181610313015281816103c801528181610582015281816106320152610745015261157e6000f3fe6080604052600436106100bc5760003560e01c80633d4e3da81161007457806352d1902d1161004e57806352d1902d146101a2578063a15f30ac146101b7578063c4d66de8146101ce57600080fd5b80633d4e3da81461016257806341910f90146101795780634f1ef2861461018f57600080fd5b8063211ecbcb116100a5578063211ecbcb1461010a5780633659cfe61461012057806338c7bf7d1461014257600080fd5b80630ac8f535146100c157806317319873146100f3575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611260565b6101ee565b60405190815260200160405180910390f35b3480156100ff57600080fd5b506100e1620249f081565b34801561011657600080fd5b506100e161753081565b34801561012c57600080fd5b5061014061013b3660046112ae565b6102fc565b005b34801561014e57600080fd5b506100e161015d3660046112cb565b6104d0565b34801561016e57600080fd5b506100e1620aae6081565b34801561018557600080fd5b506100e1619c4081565b61014061019d36600461132c565b61056b565b3480156101ae57600080fd5b506100e161072b565b3480156101c357600080fd5b506100e1620cf85081565b3480156101da57600080fd5b506101406101e93660046112ae565b610817565b6000826101fb838661140e565b1115610233576040517f5cef583a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600003610243575060006102f5565b82600003610253575060006102f5565b60008084620f424085028161026a5761026a611448565b04915084620f4240878601028161028357610283611448565b049050620cf85081116102ab5761029a82826109aa565b6102a4908461140e565b92506102f2565b81620cf850116102bf5761029a82826109aa565b6102cc82620cf8506109aa565b6102d6908461140e565b92506102e5620cf850826109aa565b6102ef908461140e565b92505b50505b9392505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036103c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104056109d3565b73ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016103bd565b6104b181610a13565b604080516000808252602082019092526104cd91839190610aa7565b50565b6000826104dd838761140e565b1115610515576040517f5cef583a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8460000361052557506000610563565b8260000361053557506000610563565b8360000361054557506000610563565b60006105528685856101ee565b651cae8c13e0009087028602049150505b949350505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610630576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016103bd565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661066f6109d3565b73ffffffffffffffffffffffffffffffffffffffff1614610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016103bd565b61071b82610a13565b61072782826001610aa7565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146107f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103bd565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600054610100900460ff16158080156108375750600054600160ff909116105b806108515750303b158015610851575060005460ff166001145b6108dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103bd565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561093b57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61094482610cab565b801561072757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000806109b684610d4b565b905060006109c384610d4b565b6002920191909104949350505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6000610a1d610db1565b6040517f12d9a6ad0000000000000000000000000000000000000000000000000000000081526004810183905233602482015273ffffffffffffffffffffffffffffffffffffffff91909116906312d9a6ad9060440160006040518083038186803b158015610a8b57600080fd5b505afa158015610a9f573d6000803e3d6000fd5b505050505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610adf57610ada83610dd9565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b64575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b6191810190611477565b60015b610bf0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016103bd565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610c9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016103bd565b50610ada838383610ee6565b600054610100900460ff16610d42576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103bd565b6104cd81610f11565b6000619c40828203610d5d5792915050565b620cf850831115610d9f57620249f0620aae607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff307b0850102040161753001610dab565b620cf850617530840204015b92915050565b60007f3ff07d6b238084e39fc5d050e304626ccf5b5ccb8f457170664beef2c5e4919a6109f7565b73ffffffffffffffffffffffffffffffffffffffff81163b610e7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016103bd565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b610eef83610fb1565b600082511180610efc5750805b15610ada57610f0b8383610ffe565b50505050565b600054610100900460ff16610fa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103bd565b6104cd8161113d565b610fba81610dd9565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b6110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016103bd565b6000808473ffffffffffffffffffffffffffffffffffffffff16846040516110cc91906114b4565b600060405180830381855af49150503d8060008114611107576040519150601f19603f3d011682016040523d82523d6000602084013e61110c565b606091505b5091509150611134828260405180606001604052806027815260200161152260279139611208565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff81163b6111e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f416363657373526573747269637465643a204e65772061636365737320636f6e60448201527f74726f6c6c6572206973206e6f74206120636f6e74726163740000000000000060648201526084016103bd565b807f3ff07d6b238084e39fc5d050e304626ccf5b5ccb8f457170664beef2c5e4919a610ea0565b606083156112175750816102f5565b6102f5838381511561122c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd91906114d0565b60008060006060848603121561127557600080fd5b505081359360208301359350604090920135919050565b73ffffffffffffffffffffffffffffffffffffffff811681146104cd57600080fd5b6000602082840312156112c057600080fd5b81356102f58161128c565b600080600080608085870312156112e157600080fd5b5050823594602084013594506040840135936060013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561133f57600080fd5b823561134a8161128c565b9150602083013567ffffffffffffffff8082111561136757600080fd5b818501915085601f83011261137b57600080fd5b81358181111561138d5761138d6112fd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156113d3576113d36112fd565b816040528281528860208487010111156113ec57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80820180821115610dab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006020828403121561148957600080fd5b5051919050565b60005b838110156114ab578181015183820152602001611493565b50506000910152565b600082516114c6818460208701611490565b9190910192915050565b60208152600082518060208401526114ef816040850160208701611490565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122058b90ac863dbd2acca2c316696f23e0c1f7787ca7e9c13b3c5b69d907c2a96aa64736f6c63430008110033";

type PremiumEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PremiumEngine__factory extends ContractFactory {
  constructor(...args: PremiumEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PremiumEngine> {
    return super.deploy(overrides || {}) as Promise<PremiumEngine>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PremiumEngine {
    return super.attach(address) as PremiumEngine;
  }
  override connect(signer: Signer): PremiumEngine__factory {
    return super.connect(signer) as PremiumEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumEngineInterface {
    return new utils.Interface(_abi) as PremiumEngineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PremiumEngine {
    return new Contract(address, _abi, signerOrProvider) as PremiumEngine;
  }
}
